# Default values for bloggy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

database:
  host: 'database.example.com'
  database: bloggy

blog:
  url: https://blog.example.com
  mail_from: admin@example.com

replicaCount: 1

deploymentStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 0

image:
  repository: ghost
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: blog.example.com
      paths:
      - /
  tls:
  # - secretName: bloggy-tls
  #   hosts:
  #   - blog.example.com

ingressRoute:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  #   - host: blog.joefriedl.net
  #     paths:
  #     - /
  middleware: []
  # - name: redirect-https
  #   namespace: traefik
  tls: {}
  #  secretName: bloggy-tls

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

certificate:
  enabled: false
  # cert-manager certificate issuer
  # issuerRef:
  #   kind: ClusterIssuer
  #   name: letsencrypt-production
  # hosts:
  # - blog.joefriedl.net
